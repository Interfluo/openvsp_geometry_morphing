//GEOM_DRAW_WIRE, GEOM_DRAW_HIDDEN, GEOM_DRAW_SHADE, GEOM_DRAW_TEXTURE, GEOM_DRAW_NONE

void main()
{	
	float x0 		= 0.0;
	float y0 		= 0.25;
	float z0 		= 0.0;
	float cr 		= 0.5;
	float ct		= 0.1;
	float b  		= 0.5;
	float dihedral 	= 0.0;
	float sweep 		= 35.0;
	float numU 		= 30.0;
	float numW 		= 50.0;
	
	float u1 		= 0.4;
	float u2 		= 0.5;
	float l1 		= 0.1;
	float l2 		= 0.75;
	float dcs		= 0.0;

	
	customWing(x0, y0, z0, cr, ct, b, dihedral, sweep, u1, u2, l1, l2, dcs, numU, numW);
	exports();
	geom_view();
	
	// check for errors
    while ( GetNumTotalErrors() > 0 )
    {
        ErrorObj err = PopLastError();
        Print( err.GetErrorString() );
    }
}


void exports()
{
	ComputeCompGeom( 0, false, NO_FILE_TYPE );
	//ExportFile( "OpenVSP-3.30.0-win64/wing_generic/cart3d_geom.tri", 0, EXPORT_CART3D );
	ExportFile( "OpenVSP-3.30.0-win64/wing_generic/obj_geom.obj", 0, EXPORT_OBJ );
}

void geom_view(){
	array< string > @geom_ids = FindGeoms();
	Print( geom_ids.size() );
	for( uint i=0; i<geom_ids.size(); i++ ){
		//Print( geom_ids[i] );
		SetGeomDrawType( geom_ids[i], GEOM_DRAW_SHADE );
	}
}

void customWing(float x0,float y0, float z0, float cr, float ct, float b, float dihedral, float sweep, float u1, float u2, float l1, float l2, float dcs, float numU, float numW){
		float deg2rad=3.14159265359/180.0;
	float rad2deg = 1/deg2rad;
	
	float x1 =x0;
	float x2 =x0+l1*b*tan(sweep*deg2rad)/cos(dihedral*deg2rad);
	float x3 =x0+l2*b*tan(sweep*deg2rad)/cos(dihedral*deg2rad);
	float xcs=x2;
	float y1 =y0;
	float y2 =y0+l1*b;
	float y3 =y0+l2*b;
	float ycs=y2;
	float z1 =z0;
	float z2 =z0+l1*b*tan(dihedral*deg2rad);
	float z3 =z0+l2*b*tan(dihedral*deg2rad);
	float zcs=z2;
	float b1 =l1*b/cos(dihedral*deg2rad);
	float b2 =(l2-l1)*b/cos(dihedral*deg2rad);
	float b3 =(1-l2)*b/cos(dihedral*deg2rad);
	float bcs=b2;
	float cr1 =cr;
	float cr2 =cr-(cr-ct)*l1;
	float cr3 =cr-(cr-ct)*l2;
	float crcs=cr2;
	float ct1 =cr2;
	float ct2 =cr3;
	float ct3 =ct;
	float ctcs=ct2;
	
	ClearVSPModel();
	SetBackground( 1.0, 1.0, 1.0 );
	
	
	// wing section 1 (root to cs)
	string wid1 = AddGeom( "WING" );
	SetGeomName( wid1, "section_1" );
	//SetGeomDrawType( wid1, GEOM_DRAW_HIDDEN ); 
	SetParmVal( wid1, "Abs_Or_Relitive_flag", "XForm", 0.0 );
	SetParmVal( wid1, "X_Location", "XForm", x1 );
	SetParmVal( wid1, "Y_Location", "XForm", y1 );
	SetParmVal( wid1, "Z_Location", "XForm", z1 );
	SetParmVal( wid1, "X_Rotation", "XForm", dihedral );
	SetParmVal( wid1, "Root_Chord", "XSec_1", cr1 );
	SetParmVal( wid1, "Tip_Chord", "XSec_1", ct1 );
	SetParmVal( wid1, "Span", "XSec_1", b1 );
	SetParmVal( wid1, "Sweep", "XSec_1", sweep );
	SetParmVal( wid1, "Tess_W", "Shape", numW );
	SetParmVal( wid1, "SectTess_U", "XSec_1", numU*l1);
	
	// wing section 2 (cs)
	string wid2 = AddGeom( "WING" );
	SetGeomName( wid2, "section_2" );
	//SetGeomDrawType( wid2, GEOM_DRAW_HIDDEN ); 
	SetParmVal( wid2, "Abs_Or_Relitive_flag", "XForm", 0.0 );
	SetParmVal( wid2, "X_Location", "XForm", x2 );
	SetParmVal( wid2, "Y_Location", "XForm", y2 );
	SetParmVal( wid2, "Z_Location", "XForm", z2 );
	SetParmVal( wid2, "X_Rotation", "XForm", dihedral );
	SetParmVal( wid2, "Root_Chord", "XSec_1", cr2 );
	SetParmVal( wid2, "Tip_Chord", "XSec_1", ct2 );
	SetParmVal( wid2, "Span", "XSec_1", b2 );
	SetParmVal( wid2, "Sweep", "XSec_1", sweep );
	SetParmVal( wid2, "TE_Trim_Type", "Trim_0", 1.0 );
	SetParmVal( wid2, "TE_Trim_AbsRel", "Trim_0", 1.0 );
	SetParmVal( wid2, "TE_Trim_X_Chord", "Trim_0", u1 );
	SetParmVal( wid2, "TE_Trim_Type", "Trim_1", 1.0 );
	SetParmVal( wid2, "TE_Trim_AbsRel", "Trim_1", 1.0 );
	SetParmVal( wid2, "TE_Trim_X_Chord", "Trim_1", u2 );
	SetParmVal( wid2, "TE_Cap_Type", "Cap_0", 2.0 );
	SetParmVal( wid2, "TE_Cap_Type", "Cap_1", 2.0 );
	SetParmVal( wid2, "TE_Cap_Length", "Cap_0", -1.0 );
	SetParmVal( wid2, "TE_Cap_Length", "Cap_1", -1.0 );
	SetParmVal( wid2, "CapUMinTess", "EndCap", 8.0 );
	SetParmVal( wid2, "Tess_W", "Shape", numW );
	SetParmVal( wid2, "SectTess_U", "XSec_1", numU*(l2-l1));
	
	// wing section 3 (cs to tip)
	string wid3 = AddGeom( "WING" );
	SetGeomName( wid3, "section_3" );
	//SetGeomDrawType( wid3, GEOM_DRAW_HIDDEN ); 
	SetParmVal( wid3, "Abs_Or_Relitive_flag", "XForm", 0.0 );
	SetParmVal( wid3, "X_Location", "XForm", x3 );
	SetParmVal( wid3, "Y_Location", "XForm", y3 );
	SetParmVal( wid3, "Z_Location", "XForm", z3 );
	SetParmVal( wid3, "X_Rotation", "XForm", dihedral );
	SetParmVal( wid3, "Root_Chord", "XSec_1", cr3 );
	SetParmVal( wid3, "Tip_Chord", "XSec_1", ct3 );
	SetParmVal( wid3, "Span", "XSec_1", b3 );
	SetParmVal( wid3, "Sweep", "XSec_1", sweep );
	SetParmVal( wid3, "Tess_W", "Shape", numW );
	SetParmVal( wid3, "SectTess_U", "XSec_1", numU*(1-l2));
	
	// control surface section
	string csR = AddGeom( "WING" );
	SetGeomName( csR, "control_surface" );
	//SetGeomDrawType( cs, GEOM_DRAW_HIDDEN ); 
	SetParmVal( csR, "Abs_Or_Relitive_flag", "XForm", 0.0 );
	SetParmVal( csR, "X_Location", "XForm", x2 );
	SetParmVal( csR, "Y_Location", "XForm", y2 );
	SetParmVal( csR, "Z_Location", "XForm", z2 );
	SetParmVal( csR, "X_Rotation", "XForm", dihedral );
	SetParmVal( csR, "Root_Chord", "XSec_1", cr2 );
	SetParmVal( csR, "Tip_Chord", "XSec_1", ct2 );
	SetParmVal( csR, "Span", "XSec_1", b2 );
	SetParmVal( csR, "Sweep", "XSec_1", sweep );
	SetParmVal( csR, "LE_Trim_Type", "Trim_0", 1.0 );
	SetParmVal( csR, "LE_Trim_AbsRel", "Trim_0", 1.0 );
	SetParmVal( csR, "LE_Trim_X_Chord", "Trim_0", 1.0-u1 );
	SetParmVal( csR, "LE_Trim_Type", "Trim_1", 1.0 );
	SetParmVal( csR, "LE_Trim_AbsRel", "Trim_1", 1.0 );
	SetParmVal( csR, "LE_Trim_X_Chord", "Trim_1", 1.0-u2 );
	SetParmVal( csR, "LE_Cap_Type", "Cap_0", 2.0 );
	SetParmVal( csR, "LE_Cap_Type", "Cap_1", 2.0 );
	SetParmVal( csR, "LE_Cap_Length", "Cap_0", 1.0 );
	SetParmVal( csR, "LE_Cap_Length", "Cap_1", 1.0 );
	SetParmVal( csR, "CapUMinTess", "EndCap", 8.0 );
	SetParmVal( csR, "Tess_W", "Shape", numW );
	SetParmVal( csR, "SectTess_U", "XSec_1", numU*(l2-l1));
	SetParmVal( csR, "Sym_Ancestor", "Sym", 0.0);
	
	// define the location of the hinge line
	string hinge = AddGeom( "HINGE" );
	SetGeomName( hinge, "hinge" );
	SetParmVal( hinge, "Abs_Or_Relitive_flag", "XForm", 0.0 );
	SetParmVal( hinge, "X_Location", "XForm", x2+(1-u1)*cr2 );
	SetParmVal( hinge, "Y_Location", "XForm", y2 );
	SetParmVal( hinge, "Z_Location", "XForm", z2 );
	SetParmVal( hinge, "OrientRotFlag", "Hinge", 1.0 );
	SetParmVal( hinge, "PrimXOff", "Hinge", x3 + (1-u2)*ct2 );
	SetParmVal( hinge, "PrimYOff", "Hinge", y3 );
	SetParmVal( hinge, "PrimZOff", "Hinge", z3 );
	SetParmVal( hinge, "PrimVecAbsRelFlag", "Hinge", 0.0 );
	SetParmVal( hinge, "PrimOffAbsRelFlag", "Hinge", 0.0 );
	SetParmVal( hinge, "PrimType", "Hinge", 1.0 );
	Update();
	
	// copy and paste control surface as child of hinge line
	CutGeomToClipboard( csR );
	PasteGeomClipboard( hinge );
	SetParmVal( hinge, "JointRotate", "Hinge", dcs );	
	Update();
}




